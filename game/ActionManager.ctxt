#BlueJ class context
comment0.params=use
comment0.target=ActionManager(Level)
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ ActionManager\r\n
comment1.params=e
comment1.target=void\ reaction(java.awt.event.KeyEvent)
comment1.text=\r\n\ workhourse\ for\ ActionManager\ class.\ determines\ output\ depending\ on\ state\ and\ event.\r\n\ \r\n\ @param\ e\ KeyEvent\ to\ be\ handled\r\n
comment2.params=e\ thing
comment2.target=boolean\ moveWithObject(java.awt.event.KeyEvent,\ PhysicalObject)
comment2.text=\r\n\ method\ to\ move\ cursor\ and\ object.\ currently\ not\ used.\ previously\ used\ in\ testing\r\n\ \r\n\ @param\ \ e\ KeyEvent\ to\ be\ handled\r\n\ @param\ thing\ Object\ to\ be\ used\r\n\ @return\ \ returns\ true\ if\ the\ cursor\ was\ able\ to\ move\ correctly\ \r\n
comment3.params=e
comment3.target=boolean\ moveCursor(java.awt.event.KeyEvent)
comment3.text=\r\n\ method\ to\ move\ cursort.\ currently\ not\ used.\ previously\ used\ in\ testing\r\n\ \r\n\ @param\ \ e\ KeyEvent\ to\ be\ handled\r\n\ @return\ \ returns\ true\ if\ the\ cursor\ was\ able\ to\ move\ correctly\ \r\n
comment4.params=e
comment4.target=boolean\ moveCursorMove(java.awt.event.KeyEvent)
comment4.text=\r\n\ method\ to\ move\ cursor\ when\ in\ a\ move\ state.\r\n\ \r\n\ @param\ \ e\ KeyEvent\ to\ be\ handled\r\n\ @return\ \ returns\ true\ if\ the\ cursor\ was\ able\ to\ move\ correctly\ \r\n
comment5.params=e
comment5.target=boolean\ moveCursorAction(java.awt.event.KeyEvent)
comment5.text=\r\n\ method\ to\ move\ cursor\ when\ in\ an\ action\ state.\r\n\ \r\n\ @param\ \ e\ KeyEvent\ to\ be\ handled\r\n\ @return\ \ returns\ true\ if\ the\ cursor\ was\ able\ to\ move\ correctly\ \r\n
comment6.params=range\ beginX\ beginY\ p
comment6.target=void\ getMovement(int,\ int,\ int,\ java.lang.String)
comment6.text=\r\n\ recursive\ method\ to\ get\ range\ of\ movement\ and\ store\ in\ level\r\n\ \r\n\ @param\ range\ range\ of\ moving\ character\r\n\ @param\ beginX\ X\ posistion\ to\ start\ at\r\n\ @param\ beginY\ Y\ posistion\ to\ start\ at\r\n\ @param\ p\ string\ of\ path\ to\ get\ to\ tile\r\n
comment7.params=range\ beginX\ beginY\ p
comment7.target=void\ getActionRange(int,\ int,\ int,\ java.lang.String)
comment7.text=\r\n\ recursive\ method\ to\ get\ range\ of\ action\ and\ store\ in\ level\r\n\ does\ not\ handle\ \ AOEs\ yet\ and\ attacks\ like\ a\ spear\r\n\ \r\n\ @param\ range\ range\ of\ character's\ attack\r\n\ @param\ beginX\ X\ posistion\ to\ start\ at\r\n\ @param\ beginY\ Y\ posistion\ to\ start\ at\r\n\ @param\ p\ string\ of\ path\ to\ get\ to\ tile\r\n
comment8.params=x\ y
comment8.target=boolean\ inMovement(int,\ int)
comment8.text=\r\n\ \ helper\ method\ that\ returns\ if\ a\ x,y\ posistion\ is\ in\ movement\ range\r\n\ \ \r\n\ \ @param\ x\ x-posistion\ to\ be\ used\r\n\ \ @param\ y\ y-posistion\ to\ be\ used\r\n\ \ @return\ boolean\ value\ of\ wheter\ the\ posistion\ is\ in\ range\r\n
comment9.params=x\ y
comment9.target=boolean\ inMoveThrough(int,\ int)
comment9.text=\r\n\ \ helper\ method\ that\ returns\ if\ a\ x,y\ posistion\ is\ able\ to\ be\ moved\ through\r\n\ \ \r\n\ \ @param\ x\ x-posistion\ to\ be\ used\r\n\ \ @param\ y\ y-posistion\ to\ be\ used\r\n\ \ @return\ boolean\ value\ of\ wheter\ the\ posistion\ is\ in\ range\r\n
numComments=10
