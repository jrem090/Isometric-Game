#BlueJ class context
comment0.params=length
comment0.target=Level(int)
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ Level\r\n\ \r\n\ @param\ length\ dimension\ of\ board\ m\ x\ m\r\n
comment1.params=length\ width
comment1.target=Level(int,\ int)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Level\r\n\ \r\n\ @param\ length\ dimension\ of\ board\ m\ x\ n\r\n\ @param\ width\ 2nd\ dimension\ of\ board\ m\ x\ n\r\n
comment10.params=i\ j\ charToAdd
comment10.target=boolean\ addCharacter(int,\ int,\ Character)
comment10.text=\r\n\ This\ method\ places\ a\ character\ on\ a\ board\r\n\ @param\ i\ x-posistion\r\n\ @param\ j\ y-posistion\r\n\ @param\ charToAdd\ character\ to\ add\ to\ board\r\n\ @return\ returns\ true\ if\ character\ was\ succesfully\ added\r\n
comment11.params=character
comment11.target=void\ dies(PhysicalObject)
comment11.text=\r\n\ method\ to\ handle\ Character/Interactable\ deaths\r\n\ @param\ character\ objectToDie\r\n
comment12.params=i\ j\ charToAdd
comment12.target=void\ revives(int,\ int,\ Character)
comment12.text=\r\n\ method\ to\ handle\ an\ item\ or\ ability\ that\ revives\ a\ character\ (has\ not\ been\ used\ or\ tested\ yet)\r\n\ @param\ i\ x-posistion\r\n\ @param\ j\ y-posistion\r\n\ @param\ charToAdd\ character\ to\ revive\r\n
comment2.params=
comment2.target=void\ randomInit()
comment2.text=\r\n\ Randomly\ instantiate\ a\ lvel\ with\ no\ PhysicalObjects\r\n\ \r\n
comment3.params=
comment3.target=int\ getLength()
comment3.text=\r\n\ \ Helper\ method\ to\ get\ length\ of\ level\r\n\ \ @return\ length\ of\ level\r\n
comment4.params=
comment4.target=int\ getWidth()
comment4.text=\r\n\ \ Helper\ method\ to\ get\ width\ of\ level\r\n\ \ Most\ boards\ (at\ least\ those\ in\ test\ purposes\ have\ been\ n\ x\ n)\r\n\ \ \r\n\ \ @return\ width\ of\ level\r\n
comment5.params=x\ y
comment5.target=int\ tileHeight(int,\ int)
comment5.text=\r\n\ \ Helper\ method\ to\ get\ height\ of\ tile\r\n\ \ @param\ x\ x-poisition\ of\ tile\r\n\ \ @param\ y\ y-posistion\ of\ tile\r\n\ \ @return\ length\ of\ level\r\n
comment6.params=x\ y
comment6.target=java.awt.Color\ getTop(int,\ int)
comment6.text=\r\n\ \ Helper\ method\ to\ get\ Color\ of\ top\ of\ tile\r\n\ \ @param\ x\ x-poisition\ of\ tile\r\n\ \ @param\ y\ y-posistion\ of\ tile\r\n\ \ @return\ Color\ of\ top\r\n
comment7.params=x\ y
comment7.target=java.awt.Color\ getBase(int,\ int)
comment7.text=\r\n\ \ Helper\ method\ to\ get\ Color\ of\ base\ of\ tile\r\n\ \ @param\ x\ x-poisition\ of\ tile\r\n\ \ @param\ y\ y-posistion\ of\ tile\r\n\ \ @return\ Color\ of\ base\r\n
comment8.params=x\ y
comment8.target=boolean\ isOccupied(int,\ int)
comment8.text=\r\n\ \ Helper\ method\ to\ see\ if\ tile\ is\ occupied\r\n\ \ @param\ x\ x-poisition\ of\ tile\r\n\ \ @param\ y\ y-posistion\ of\ tile\r\n\ \ @return\ true\ if\ tile\ is\ Occupied\r\n
comment9.params=numChars
comment9.target=void\ createGrassland(int)
comment9.text=\r\n\ \ testing\ method\ used\ to\ create\ a\ grassland\ level\r\n\ \ @param\ numChars\ number\ of\ characters\ to\ be\ added\ to\ level\r\n
numComments=13
